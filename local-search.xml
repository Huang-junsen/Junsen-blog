<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>threejs轨道控制器辅助器</title>
    <link href="/2024/01/10/threejs%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8%E8%BE%85%E5%8A%A9%E5%99%A8/"/>
    <url>/2024/01/10/threejs%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8%E8%BE%85%E5%8A%A9%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="threejs轨道控制器辅助器"><a href="#threejs轨道控制器辅助器" class="headerlink" title="threejs轨道控制器辅助器"></a>threejs轨道控制器辅助器</h1><blockquote><p>OrbitControlsHelper 由来，由于项目需要threejs默认的轨道控制器无法以模型为中心上下左右旋转，而是以修改相机视角达到视角旋转的效果当通过鼠标右键移动控制器后，相机的旋转会以世界中心旋转。</p><p>OrbitControlsHelper 可以把旋转中心从世界中心坐标改为模型中心旋转，可以参考下面的代码去理解。最后的是抽取成辅助类形式去调用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div ref=&quot;container&quot;&gt;<br>    &lt;!-- &lt;canvas ref=&quot;canvas&quot;&gt;&lt;/canvas&gt; --&gt;<br>    &lt;button @click=&quot;test(&#x27;0°&#x27;)&quot;&gt;回正&lt;/button&gt;<br>    &lt;button @click=&quot;test(&#x27;R45°&#x27;)&quot;&gt;R45°&lt;/button&gt;<br>    &lt;button @click=&quot;test(&#x27;L45°&#x27;)&quot;&gt;L45°&lt;/button&gt;<br>    &lt;button @click=&quot;test(&#x27;R90°&#x27;)&quot;&gt;R90°&lt;/button&gt;<br>    &lt;button @click=&quot;test(&#x27;L90°&#x27;)&quot;&gt;L90°&lt;/button&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref, onMounted &#125; from &#x27;vue&#x27;;<br>import * as THREE from &#x27;three&#x27;;<br>import &#123; OrbitControls &#125; from &#x27;three/addons/controls/OrbitControls.js&#x27;;<br><br>const container = ref();<br>let camera: any;<br>let controls: any;<br>let cube: any;<br>const init = () =&gt; &#123;<br>  // 初始化场景<br>  const scene = new THREE.Scene();<br>  camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);<br>  const renderer = new THREE.WebGLRenderer();<br>  camera.position.z = 5;<br>  renderer.setSize(window.innerWidth, window.innerHeight);<br>  container.value.appendChild(renderer.domElement);<br><br>  controls = new OrbitControls(camera, renderer.domElement);<br>  controls.enableRotate = false;<br>  controls.enableZoom = false;<br>  // 如果OrbitControls改变了相机参数，重新调用渲染器渲染三维场景<br>  controls.addEventListener(&#x27;change&#x27;, function () &#123;<br>    renderer.render(scene, camera); // 执行渲染操作<br>  &#125;); // 监听鼠标、键盘事件<br><br>  //   const gridHelper = new THREE.GridHelper(300, 25, 0x004444, 0x004444);<br><br>  //   scene.add(gridHelper);<br>  const geometry = new THREE.BoxGeometry(1, 1, 1);<br>  const material = new THREE.MeshBasicMaterial(&#123; color: 0x00ff00 &#125;);<br>  cube = new THREE.Mesh(geometry, material);<br>  scene.add(cube);<br><br>  // 初始化控制参数<br>  const state = &#123;<br>    isLongPressing: false,<br>    longPressThreshold: 100, // 长按阈值，单位为毫秒<br>    pressStartTime: 0,<br>    previousMousePosition: &#123;<br>      x: 0,<br>      y: 0,<br>    &#125;,<br>    longPressTimer: undefined, // 用于存储定时器的ID<br>  &#125;;<br><br>  // 鼠标按下事件<br>  const handleMouseDown = (event: MouseEvent) =&gt; &#123;<br>    if (event.button === 0) &#123;<br>      // 检查左键<br>      state.pressStartTime = Date.now();<br>      state.isLongPressing = false;<br>      state.previousMousePosition.x = event.clientX;<br>      state.previousMousePosition.y = event.clientY;<br>      state.longPressTimer = setTimeout(checkLongPress, state.longPressThreshold) as unknown as any;<br>    &#125;<br>  &#125;;<br><br>  // 鼠标松开事件<br>  const handleMouseUp = () =&gt; &#123;<br>    state.isLongPressing = false;<br>    clearTimeout(state.longPressTimer);<br>  &#125;;<br>  // 检查长按<br>  function checkLongPress() &#123;<br>    const currentTime = Date.now();<br>    if (currentTime - state.pressStartTime &gt;= state.longPressThreshold) &#123;<br>      // 左键长按的处理代码<br>      state.isLongPressing = true;<br>      console.log(&#x27;左键长按&#x27;);<br>    &#125;<br>  &#125;<br>  // 鼠标移动事件<br>  const handleMouseMove = (event: MouseEvent) =&gt; &#123;<br>    if (state.isLongPressing) &#123;<br>      // 在长按状态下的鼠标移动处理代码<br>      const deltaMove = &#123;<br>        x: event.pageX - state.previousMousePosition.x,<br>        y: event.pageY - state.previousMousePosition.y,<br>      &#125;;<br>      // 获取关联的 DOM 元素<br>      const element = renderer.domElement;<br>      cube.rotation.x += (2 * Math.PI * deltaMove.y) / element.clientHeight;<br>      cube.rotation.y += (2 * Math.PI * deltaMove.x) / element.clientWidth;<br>      // 更新鼠标位置<br>      state.previousMousePosition = &#123;<br>        x: event.pageX,<br>        y: event.pageY,<br>      &#125;;<br>    &#125;<br>  &#125;;<br>  // 滚轮事件<br>  const handleWheel = (event: WheelEvent) =&gt; &#123;<br>    // 根据滚轮滚动的差值进行缩放<br>    const scaleFactor = event.deltaY &gt; 0 ? 0.9 : 1.1;<br>    cube.scale.multiplyScalar(scaleFactor);<br>  &#125;;<br><br>  // 渲染循环<br>  const animate = () =&gt; &#123;<br>    requestAnimationFrame(animate);<br>    renderer.render(scene, camera);<br>  &#125;;<br><br>  // 初始化相机位置<br>  camera.position.z = 5;<br><br>  // 启动渲染循环<br>  animate();<br><br>  document.addEventListener(&#x27;mousedown&#x27;, handleMouseDown);<br>  document.addEventListener(&#x27;mouseup&#x27;, handleMouseUp);<br>  document.addEventListener(&#x27;mousemove&#x27;, handleMouseMove);<br>  document.addEventListener(&#x27;wheel&#x27;, handleWheel);<br>&#125;;<br><br>const test = (degToRad: string) =&gt; &#123;<br>  console.log(controls);<br><br>  switch (degToRad) &#123;<br>    // 0°旋转的情况<br>    case &#x27;0°&#x27;:<br>      // 设置左右两个相机的旋转<br>      cube.rotation.set(0, THREE.MathUtils.degToRad(0), 0);<br>      break;<br><br>    // +45°旋转的情况<br>    case &#x27;R45°&#x27;:<br>      cube.rotation.set(0, THREE.MathUtils.degToRad(45), 0);<br>      break;<br><br>    // -45°旋转的情况<br>    case &#x27;L45°&#x27;:<br>      cube.rotation.set(0, -THREE.MathUtils.degToRad(45), 0);<br>      break;<br><br>    // +90°旋转的情况<br>    case &#x27;R90°&#x27;:<br>      cube.rotation.set(0, THREE.MathUtils.degToRad(90), 0);<br>      break;<br><br>    // -90°旋转的情况<br>    case &#x27;L90°&#x27;:<br>      cube.rotation.set(0, -THREE.MathUtils.degToRad(90), 0);<br>      break;<br>  &#125;<br>  // 设置轨道控制器的目标点（target）为初始位置<br>  controls.target.set(0, 0, 0);<br><br>  // 设置相机的位置为默认位置<br>  camera.position.set(0, 0, 5); // 你可能需要根据实际情况调整 Z 轴的值<br><br>  // 使相机重新对准目标点<br>  controls.update();<br><br>  console.log(controls);<br>&#125;;<br><br>// 注册事件监听器<br>onMounted(() =&gt; &#123;<br>  init();<br>&#125;);<br>&lt;/script&gt;<br><br><br></code></pre></td></tr></table></figure><h2 id="抽取后的代码"><a href="#抽取后的代码" class="headerlink" title="抽取后的代码"></a>抽取后的代码</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// eslint-disable-next-line filename-rules/match</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrbitControlsHelper</span> &#123;<br>  state = &#123;<br>    <span class="hljs-attr">isLongPressing</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">longPressThreshold</span>: <span class="hljs-number">100</span>, <span class="hljs-comment">// 长按阈值，单位为毫秒</span><br>    <span class="hljs-attr">pressStartTime</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">previousMousePosition</span>: &#123;<br>      <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>    <span class="hljs-attr">longPressTimer</span>: <span class="hljs-literal">undefined</span>, <span class="hljs-comment">// 用于存储定时器的ID,</span><br>    <span class="hljs-comment">// element: HTMLCanvasElement</span><br>  &#125;;<br><br>  <span class="hljs-attr">models</span>: <span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">Group</span>&lt;<span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">Object3DEventMap</span>&gt;[] = [];<br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> element: HTMLCanvasElement</span>) &#123;&#125;<br><br>  checkLongPress = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> currentTime = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<br>    <span class="hljs-keyword">if</span> (currentTime - <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">pressStartTime</span> &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">longPressThreshold</span>) &#123;<br>      <span class="hljs-comment">// 左键长按的处理代码</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">isLongPressing</span> = <span class="hljs-literal">true</span>;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;左键长按&#x27;</span>);<br>    &#125;<br>  &#125;;<br><br>  handleMouseUp = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">isLongPressing</span> = <span class="hljs-literal">false</span>;<br>    <span class="hljs-built_in">clearTimeout</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">longPressTimer</span>);<br>  &#125;;<br><br>  handleMouseDown = <span class="hljs-function">(<span class="hljs-params">event: MouseEvent</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (event.<span class="hljs-property">button</span> === <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-comment">// 检查左键</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">pressStartTime</span> = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">isLongPressing</span> = <span class="hljs-literal">false</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">previousMousePosition</span>.<span class="hljs-property">x</span> = event.<span class="hljs-property">clientX</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">previousMousePosition</span>.<span class="hljs-property">y</span> = event.<span class="hljs-property">clientY</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">longPressTimer</span> = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">checkLongPress</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">longPressThreshold</span>) <span class="hljs-keyword">as</span> <span class="hljs-built_in">unknown</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span>;<br>    &#125;<br>  &#125;;<br><br>  handleMouseMove = <span class="hljs-function">(<span class="hljs-params">event: MouseEvent</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">isLongPressing</span>) &#123;<br>      <span class="hljs-comment">// 在长按状态下的鼠标移动处理代码</span><br>      <span class="hljs-keyword">const</span> deltaMove = &#123;<br>        <span class="hljs-attr">x</span>: event.<span class="hljs-property">pageX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">previousMousePosition</span>.<span class="hljs-property">x</span>,<br>        <span class="hljs-attr">y</span>: event.<span class="hljs-property">pageY</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">previousMousePosition</span>.<span class="hljs-property">y</span>,<br>      &#125;;<br>      <span class="hljs-comment">// 获取关联的 DOM 元素</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">models</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">model</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (model) &#123;<br>          model.<span class="hljs-property">rotation</span>.<span class="hljs-property">x</span> += (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * deltaMove.<span class="hljs-property">y</span>) / <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">clientHeight</span>;<br>          model.<span class="hljs-property">rotation</span>.<span class="hljs-property">y</span> += (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * deltaMove.<span class="hljs-property">x</span>) / <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">clientWidth</span>;<br>        &#125;<br>      &#125;);<br>      <span class="hljs-comment">// 更新鼠标位置</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">previousMousePosition</span> = &#123;<br>        <span class="hljs-attr">x</span>: event.<span class="hljs-property">pageX</span>,<br>        <span class="hljs-attr">y</span>: event.<span class="hljs-property">pageY</span>,<br>      &#125;;<br>    &#125;<br>  &#125;;<br><br>  handleWheel = <span class="hljs-function">(<span class="hljs-params">event: WheelEvent</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 根据滚轮滚动的差值进行缩放</span><br>    <span class="hljs-keyword">const</span> scaleFactor = event.<span class="hljs-property">deltaY</span> &gt; <span class="hljs-number">0</span> ? <span class="hljs-number">0.9</span> : <span class="hljs-number">1.1</span>;<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">models</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">model</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (model) &#123;<br>        <span class="hljs-comment">// 计算新的缩放值</span><br>        <span class="hljs-keyword">const</span> newScale = model.<span class="hljs-property">scale</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">multiplyScalar</span>(scaleFactor);<br><br>        <span class="hljs-comment">// 设置缩放范围，例如，假设缩放范围在 -20 到 20 之间</span><br>        <span class="hljs-keyword">const</span> minScale = -<span class="hljs-number">30</span>;<br>        <span class="hljs-keyword">const</span> maxScale = <span class="hljs-number">30</span>;<br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newScale);<br>        <span class="hljs-keyword">if</span> (newScale.<span class="hljs-property">x</span> &lt;= -<span class="hljs-number">5</span>) &#123;<br>          <span class="hljs-comment">// 限制缩放值在范围内</span><br>          newScale.<span class="hljs-title function_">clampScalar</span>(minScale, maxScale);<br><br>          <span class="hljs-comment">// 应用新的缩放值</span><br>          model.<span class="hljs-property">scale</span>.<span class="hljs-title function_">copy</span>(newScale);<br>        &#125;<br>      &#125;<br>    &#125;);<br>  &#125;;<br><br>  loadModels = <span class="hljs-function">(<span class="hljs-params">models: THREE.Group&lt;THREE.Object3DEventMap&gt;[]</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">models</span> = models;<br>  &#125;;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs processing">let orbitControlsHelper: any;<br><br># 创建轨道控制器辅助器<br>orbitControlsHelper = <span class="hljs-keyword">new </span><span class="hljs-class title_">OrbitControlsHelper</span>(renderer.<span class="hljs-property">value</span>.<span class="hljs-property">domElement</span>);<br><br># 禁用 轨道控制器缩放和平移旋转事件<br>controls.<span class="hljs-property">enableRotate</span> = <span class="hljs-literal">false</span>;<br>controls.<span class="hljs-property">enableZoom</span> = <span class="hljs-literal">false</span>;<br><br># 订阅鼠标按键事件<br>renderer.<span class="hljs-property">value</span>.<span class="hljs-property">domElement</span>.<span class="hljs-property">addEventListener</span>(<span class="hljs-string">&#x27;mousedown&#x27;</span>, orbitControlsHelper.<span class="hljs-property">handleMouseDown</span>);<br>renderer.<span class="hljs-property">value</span>.<span class="hljs-property">domElement</span>.<span class="hljs-property">addEventListener</span>(<span class="hljs-string">&#x27;mouseup&#x27;</span>, orbitControlsHelper.<span class="hljs-property">handleMouseUp</span>);<br>renderer.<span class="hljs-property">value</span>.<span class="hljs-property">domElement</span>.<span class="hljs-property">addEventListener</span>(<span class="hljs-string">&#x27;mousemove&#x27;</span>, orbitControlsHelper.<span class="hljs-property">handleMouseMove</span>);<br>renderer.<span class="hljs-property">value</span>.<span class="hljs-property">domElement</span>.<span class="hljs-property">addEventListener</span>(<span class="hljs-string">&#x27;wheel&#x27;</span>, orbitControlsHelper.<span class="hljs-property">handleWheel</span>);<br><br>#在执行动画渲染的函数加载需要修改的模型<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 执行动画渲染的函数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> animate = () =&gt; &#123;<br>  <span class="hljs-title function_">requestAnimationFrame</span>(animate);<br>  # 加载模型<br>  orbitControlsHelper.<span class="hljs-property">loadModels</span>([FaceModelOne, FaceModelTwo, HistoryFaceModel]);<br>  <span class="hljs-comment">// 渲染左眼场景</span><br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setViewport</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">width</span>.<span class="hljs-property">value</span>, <span class="hljs-built_in">height</span>.<span class="hljs-property">value</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setScissor</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">width</span>.<span class="hljs-property">value</span>, <span class="hljs-built_in">height</span>.<span class="hljs-property">value</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setScissorTest</span>(<span class="hljs-literal">true</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">render</span>(sceneLeft, cameraLeft.<span class="hljs-property">value</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setPixelRatio</span>(window.<span class="hljs-property">devicePixelRatio</span>);<br><br>  <span class="hljs-comment">// 渲染右眼场景</span><br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setViewport</span>(<span class="hljs-built_in">width</span>.<span class="hljs-property">value</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">width</span>.<span class="hljs-property">value</span>, <span class="hljs-built_in">height</span>.<span class="hljs-property">value</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setScissor</span>(<span class="hljs-built_in">width</span>.<span class="hljs-property">value</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">width</span>.<span class="hljs-property">value</span>, <span class="hljs-built_in">height</span>.<span class="hljs-property">value</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setScissorTest</span>(<span class="hljs-literal">true</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">render</span>(sceneRight, cameraRight.<span class="hljs-property">value</span>);<br>  renderer.<span class="hljs-property">value</span>.<span class="hljs-property">setPixelRatio</span>(window.<span class="hljs-property">devicePixelRatio</span>);<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>threejs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web3d</tag>
      
      <tag>threejs</tag>
      
      <tag>webgl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue3-ts-vite集成electron记录</title>
    <link href="/2023/11/26/vue3-ts-vite%E9%9B%86%E6%88%90electron%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/11/26/vue3-ts-vite%E9%9B%86%E6%88%90electron%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="vue3-ts-vite集成electron记录"><a href="#vue3-ts-vite集成electron记录" class="headerlink" title="vue3-ts-vite集成electron记录"></a>vue3-ts-vite集成electron记录</h1><h2 id="安装electron、electron-builder"><a href="#安装electron、electron-builder" class="headerlink" title="安装electron、electron-builder"></a>安装electron、electron-builder</h2><blockquote><p>npm install –save-dev electron electron-builder</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote><p>项目目录结构</p><p>│  .cz-config.js<br>│  .env<br>│  .env.development<br>│  .env.production<br>│  .eslintrc.cjs<br>│  .gitignore<br>│  .npmrc<br>│  .prettierrc.json<br>│  catalogTree.txt<br>│  commitlint.config.cjs<br>│  env.d.ts<br>│  index.html<br>│  package.json<br>│  pnpm-lock.yaml<br>│  README.md<br>│  tsconfig.app.json<br>│  tsconfig.json<br>│  tsconfig.node.json<br>│  uno.config.ts<br>│  vite.config.ts<br>│<br>├─.husky<br>│      commit-msg<br>│      pre-commit<br>│<br>├─.vscode<br>│      extensions.json<br>│<br>├─electron<br>│  │  background.ts<br>│  │<br>│  ├─plugins<br>│  │      vite-electron-build.ts<br>│  │      vite-electron-dev.ts<br>│  │<br>│  ├─preload<br>│  │      index.ts<br>│  │<br>│  └─utils<br>│          build.ts<br>│          handle-files.ts<br>│<br>├─public<br>│      favicon.ico<br>│<br>└─src<br>    │  App.vue<br>    │  env.d.ts<br>    │  global.d.ts<br>    │  main.ts<br>    │<br>    ├─assets<br>    │      base.css<br>    │      logo.svg<br>    │      main.css<br>    │<br>    ├─request<br>    │      index.ts<br>    │<br>    ├─router<br>    │      index.ts<br>    │<br>    ├─stores<br>    │      counter.ts<br>    │<br>    ├─utils<br>    │      indexed-db.ts<br>    │<br>    └─views<br>            ThreeDemo.vue</p></blockquote><h3 id="根目录新建electron文件夹"><a href="#根目录新建electron文件夹" class="headerlink" title="根目录新建electron文件夹"></a>根目录新建electron文件夹</h3><blockquote><p>安装我的项目结构在根目录新建electron文件夹以及文件夹内的所有文件夹与文件</p></blockquote><ul><li><p>background.ts 等同于electron文档中介绍的 main.js，因为项目已经存在main.ts，命名冲突</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> electron 主进程文件，因为项目已经有同名的main.ts了，所以使用background.ts</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;path&#x27;</span><br><span class="hljs-keyword">import</span> &#123; app, <span class="hljs-title class_">BrowserWindow</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;electron&#x27;</span><br><br><span class="hljs-comment">// 禁用electron缓存</span><br>app.<span class="hljs-property">commandLine</span>.<span class="hljs-title function_">appendSwitch</span>(<span class="hljs-string">&#x27;disable-gpu-cache&#x27;</span>)<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createWindow</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> win = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BrowserWindow</span>(&#123;<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">800</span>,<br>        <span class="hljs-attr">height</span>: <span class="hljs-number">600</span>,<br>        <span class="hljs-attr">autoHideMenuBar</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">webPreferences</span>: &#123;<br>            <span class="hljs-attr">preload</span>: process.<span class="hljs-property">argv</span>[<span class="hljs-number">2</span>]<br>                ? path.<span class="hljs-title function_">join</span>(__dirname, <span class="hljs-string">&#x27;../preload/index.ts&#x27;</span>)<br>                : path.<span class="hljs-title function_">join</span>(__dirname, <span class="hljs-string">&#x27;preload/index.js&#x27;</span>),<br>            <span class="hljs-attr">nodeIntegration</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 禁用 Node.js 整合</span><br>            <span class="hljs-attr">contextIsolation</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 启用上下文隔离</span><br>            <span class="hljs-attr">sandbox</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 启用沙盒模式</span><br>            <span class="hljs-attr">webSecurity</span>: <span class="hljs-literal">true</span><br>        &#125;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (process.<span class="hljs-property">argv</span>[<span class="hljs-number">2</span>]) &#123;<br>        win.<span class="hljs-property">webContents</span>.<span class="hljs-title function_">openDevTools</span>()<br>        win.<span class="hljs-title function_">loadURL</span>(process.<span class="hljs-property">argv</span>[<span class="hljs-number">2</span>])<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        win.<span class="hljs-title function_">loadFile</span>(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br>    &#125;<br>&#125;<br><br>app.<span class="hljs-title function_">whenReady</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-title function_">createWindow</span>()<br>    app.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;activate&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title class_">BrowserWindow</span>.<span class="hljs-title function_">getAllWindows</span>().<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-title function_">createWindow</span>()<br>        &#125;<br>    &#125;)<br>&#125;)<br><br>app.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;window-all-closed&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (process.<span class="hljs-property">platform</span> !== <span class="hljs-string">&#x27;darwin&#x27;</span>) &#123;<br>        app.<span class="hljs-title function_">quit</span>()<br>    &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure></li><li><p>utils里面的build.ts、handle-files.ts，分别处理electron文件的热更新、与项目的dist打包文件同步</p><ul><li>utils&#x2F;build.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">buildBackground</span> = (<span class="hljs-params">entryPoints: <span class="hljs-built_in">string</span>, outfile: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>    <span class="hljs-comment">// entryPoints: [&#x27;electron/background.ts&#x27;],</span><br>    <span class="hljs-comment">// outfile: &#x27;electron/dist/background.js&#x27;,</span><br><br>    <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-var-requires</span><br>    <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;esbuild&#x27;</span>).<span class="hljs-title function_">buildSync</span>(&#123;<br>        <span class="hljs-attr">entryPoints</span>: [entryPoints],<br>        <span class="hljs-attr">bundle</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;es2020&#x27;</span>,<br>        outfile,<br>        <span class="hljs-attr">platform</span>: <span class="hljs-string">&#x27;node&#x27;</span>,<br>        <span class="hljs-attr">external</span>: [<span class="hljs-string">&#x27;electron&#x27;</span>]<br>    &#125;)<br>&#125;<br><br><br></code></pre></td></tr></table></figure><ul><li><p>electron&#x2F;utils&#x2F;handle-files.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> fs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;fs&#x27;</span><br><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;path&#x27;</span><br><br><span class="hljs-comment">// 使用 fs 模块进行清空目标目录</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">emptyDirectorySync</span>(<span class="hljs-params">directory: <span class="hljs-built_in">string</span></span>): <span class="hljs-built_in">void</span> &#123;<br>    <span class="hljs-keyword">if</span> (fs.<span class="hljs-title function_">existsSync</span>(directory)) &#123;<br>        <span class="hljs-keyword">const</span> files = fs.<span class="hljs-title function_">readdirSync</span>(directory)<br><br>        files.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">file</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">const</span> filePath = path.<span class="hljs-title function_">join</span>(directory, file)<br><br>            <span class="hljs-keyword">if</span> (fs.<span class="hljs-title function_">lstatSync</span>(filePath).<span class="hljs-title function_">isDirectory</span>()) &#123;<br>                <span class="hljs-title function_">emptyDirectorySync</span>(filePath)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                fs.<span class="hljs-title function_">unlinkSync</span>(filePath)<br>            &#125;<br>        &#125;)<br><br>        fs.<span class="hljs-title function_">rmdirSync</span>(directory)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 使用 fs 模块进行复制</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">copyFolderSync</span>(<span class="hljs-params">source: <span class="hljs-built_in">string</span>, target: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-keyword">if</span> (!fs.<span class="hljs-title function_">existsSync</span>(target)) &#123;<br>        fs.<span class="hljs-title function_">mkdirSync</span>(target)<br>    &#125;<br><br>    <span class="hljs-keyword">const</span> files = fs.<span class="hljs-title function_">readdirSync</span>(source)<br><br>    files.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">file</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> sourceFilePath = path.<span class="hljs-title function_">join</span>(source, file)<br>        <span class="hljs-keyword">const</span> targetFilePath = path.<span class="hljs-title function_">join</span>(target, file)<br><br>        <span class="hljs-keyword">if</span> (fs.<span class="hljs-title function_">lstatSync</span>(sourceFilePath).<span class="hljs-title function_">isDirectory</span>()) &#123;<br>            <span class="hljs-title function_">copyFolderSync</span>(sourceFilePath, targetFilePath)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            fs.<span class="hljs-title function_">copyFileSync</span>(sourceFilePath, targetFilePath)<br>        &#125;<br>    &#125;)<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul></li><li><p>preload是electron的预加载文件，例如IPC通信、vue与electron通信桥梁都可以在这里面定义，以下是electron官网的介绍</p><blockquote><p>什么是预加载脚本，并且学会如何使用预加载脚本来安全地将特权 API 暴露至渲染进程中。 不仅如此，你还会学到如何使用 Electron 的进程间通信 (IPC) 模组来让主进程与渲染进程间进行通信。</p><p>Electron 的主进程是一个拥有着完全操作系统访问权限的 Node.js 环境。 除了 <a href="https://www.electronjs.org/zh/docs/latest/api/app">Electron 模组</a> 之外，您也可以访问 <a href="https://nodejs.org/dist/latest/docs/api/">Node.js 内置模块</a> 和所有通过 npm 安装的包。 另一方面，出于安全原因，渲染进程默认跑在网页页面上，而并非 Node.js里。</p><p>为了将 Electron 的不同类型的进程桥接在一起，我们需要使用被称为 <strong>预加载</strong> 的特殊脚本。</p><p><a href="https://www.electronjs.org/zh/docs/latest/tutorial/tutorial-preload">  electron预加载文档  </a></p></blockquote><ul><li>preload&#x2F;index.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/* eslint-disable eslint-comments/disable-enable-pair */</span><br><span class="hljs-comment">/* eslint-disable @typescript-eslint/no-var-requires */</span><br><br><span class="hljs-keyword">const</span> &#123; contextBridge, ipcRenderer &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;electron&#x27;</span>)<br><br>contextBridge.<span class="hljs-title function_">exposeInMainWorld</span>(<span class="hljs-string">&#x27;versions&#x27;</span>, &#123;<br>    <span class="hljs-attr">node</span>: <span class="hljs-function">() =&gt;</span> process.<span class="hljs-property">versions</span>.<span class="hljs-property">node</span>,<br>    <span class="hljs-attr">chrome</span>: <span class="hljs-function">() =&gt;</span> process.<span class="hljs-property">versions</span>.<span class="hljs-property">chrome</span>,<br>    <span class="hljs-attr">electron</span>: <span class="hljs-function">() =&gt;</span> process.<span class="hljs-property">versions</span>.<span class="hljs-property">electron</span><br>    <span class="hljs-comment">// 除函数之外，我们也可以暴露变量</span><br>&#125;)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(ipcRenderer)<br><br></code></pre></td></tr></table></figure></li><li><p>plugins目录是vite-plugins，处理elctron开发环境与生产环境</p><ul><li>electron&#x2F;plugins&#x2F;vite-electron-build.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs ts"># electron/plugins/vite-electron-build.<span class="hljs-property">ts</span><br><br><span class="hljs-comment">// 生产环境插件</span><br><span class="hljs-keyword">import</span> fs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;node:fs&#x27;</span><br><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;node:path&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> &#123; <span class="hljs-title class_">Plugin</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> electronBuilder <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;electron-builder&#x27;</span><br><span class="hljs-keyword">import</span> &#123; buildBackground &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../utils/build&#x27;</span><br><span class="hljs-keyword">import</span> &#123; emptyDirectorySync, copyFolderSync &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../utils/handle-files&#x27;</span><br><br><span class="hljs-comment">// 源文件夹路径</span><br><span class="hljs-keyword">const</span> sourcePath = path.<span class="hljs-title function_">resolve</span>(process.<span class="hljs-title function_">cwd</span>(), <span class="hljs-string">&#x27;dist&#x27;</span>)<br><br><span class="hljs-comment">// 目标文件夹路径</span><br><span class="hljs-keyword">const</span> targetPath = path.<span class="hljs-title function_">resolve</span>(process.<span class="hljs-title function_">cwd</span>(), <span class="hljs-string">&#x27;./electron/dist&#x27;</span>)<br><br><span class="hljs-comment">// 导出 Vite 插件</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">ElectronBuildPlugin</span> = (): <span class="hljs-function"><span class="hljs-params">Plugin</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;electron-build&#x27;</span>,<br>        <span class="hljs-attr">closeBundle</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-comment">// 清空目标目录</span><br>            <span class="hljs-title function_">emptyDirectorySync</span>(targetPath)<br><br>            <span class="hljs-comment">// 执行复制操作</span><br>            <span class="hljs-title function_">copyFolderSync</span>(sourcePath, targetPath)<br><br>            <span class="hljs-comment">// 构建 Electron 后台脚本</span><br>            <span class="hljs-title function_">buildBackground</span>(<span class="hljs-string">&#x27;electron/background.ts&#x27;</span>, <span class="hljs-string">&#x27;electron/dist/background.js&#x27;</span>)<br>            <span class="hljs-comment">// 构建 preload预加载</span><br>            <span class="hljs-title function_">buildBackground</span>(<span class="hljs-string">&#x27;electron/preload/index.ts&#x27;</span>, <span class="hljs-string">&#x27;electron/dist/preload/index.js&#x27;</span>)<br><br>            <span class="hljs-comment">// 读取 package.json 文件并更新其中的 &quot;main&quot; 字段</span><br>            <span class="hljs-keyword">const</span> packageJson = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;package.json&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>            packageJson.<span class="hljs-property">main</span> = <span class="hljs-string">&#x27;./background.js&#x27;</span><br><br>            <span class="hljs-comment">// 写入更新后的 package.json 到目标文件夹</span><br>            fs.<span class="hljs-title function_">writeFileSync</span>(<span class="hljs-string">&#x27;./electron/dist/package.json&#x27;</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(packageJson, <span class="hljs-literal">null</span>, <span class="hljs-number">4</span>))<br><br>            <span class="hljs-comment">// 配置 Electron Builder 并执行构建</span><br>            <span class="hljs-keyword">const</span> outputDir = <span class="hljs-string">&#x27;./electron/dist/node_modules&#x27;</span><br><br>            <span class="hljs-comment">// 确保输出目录不存在时再创建</span><br>            <span class="hljs-keyword">if</span> (!fs.<span class="hljs-title function_">existsSync</span>(outputDir)) &#123;<br>                fs.<span class="hljs-title function_">mkdirSync</span>(outputDir)<br>            &#125;<br><br>            electronBuilder.<span class="hljs-title function_">build</span>(&#123;<br>                <span class="hljs-attr">config</span>: &#123;<br>                    <span class="hljs-attr">directories</span>: &#123;<br>                        <span class="hljs-attr">output</span>: path.<span class="hljs-title function_">resolve</span>(process.<span class="hljs-title function_">cwd</span>(), <span class="hljs-string">&#x27;./electron/release&#x27;</span>),<br>                        <span class="hljs-attr">app</span>: targetPath<br>                    &#125;,<br>                    <span class="hljs-attr">asar</span>: <span class="hljs-literal">true</span>,<br>                    <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;gzjstech.com&#x27;</span>,<br>                    <span class="hljs-attr">productName</span>: <span class="hljs-string">&#x27;vite-electron&#x27;</span>,<br>                    <span class="hljs-attr">nsis</span>: &#123;<br>                        <span class="hljs-attr">oneClick</span>: <span class="hljs-literal">false</span>,<br>                        <span class="hljs-attr">perMachine</span>: <span class="hljs-literal">false</span>,<br>                        <span class="hljs-attr">allowToChangeInstallationDirectory</span>: <span class="hljs-literal">true</span><br>                    &#125;<br>                &#125;<br>            &#125;)<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><p>vite-electron-dev.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 开发环境插件</span><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> &#123; <span class="hljs-title class_">AddressInfo</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;net&#x27;</span><br><span class="hljs-keyword">import</span> fs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;node:fs&#x27;</span><br><span class="hljs-keyword">import</span> &#123; spawn, <span class="hljs-keyword">type</span> <span class="hljs-title class_">ChildProcessWithoutNullStreams</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;child_process&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> &#123; <span class="hljs-title class_">Plugin</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> &#123; buildBackground &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../utils/build&#x27;</span><br><br><span class="hljs-comment">// 定义 Electron 进程变量</span><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">ElectronProcess</span>: <span class="hljs-title class_">ChildProcessWithoutNullStreams</span><br><br><span class="hljs-comment">// 导出 Vite 插件</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">ElectronDevPlugin</span> = (): <span class="hljs-function"><span class="hljs-params">Plugin</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;electron-dev&#x27;</span>,<br>        <span class="hljs-attr">configureServer</span>: <span class="hljs-function">(<span class="hljs-params">server</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// 构建 Electron 后台脚本</span><br>            <span class="hljs-title function_">buildBackground</span>(<span class="hljs-string">&#x27;electron/background.ts&#x27;</span>, <span class="hljs-string">&#x27;electron/dist/background.js&#x27;</span>)<br><br>            <span class="hljs-comment">// 在服务器监听事件时</span><br>            server.<span class="hljs-property">httpServer</span>?.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;listening&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>                <span class="hljs-comment">// 获取服务器地址信息</span><br>                <span class="hljs-keyword">const</span> addressInfo = server.<span class="hljs-property">httpServer</span>?.<span class="hljs-title function_">address</span>() <span class="hljs-keyword">as</span> <span class="hljs-title class_">AddressInfo</span><br>                <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">IP</span> = <span class="hljs-string">`http://localhost:<span class="hljs-subst">$&#123;addressInfo.port&#125;</span>`</span><br><br>                <span class="hljs-comment">// 启动 Electron 进程</span><br>                <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-var-requires</span><br>                <span class="hljs-title class_">ElectronProcess</span> = <span class="hljs-title function_">spawn</span>(<span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;electron&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-built_in">unknown</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>, [<br>                    <span class="hljs-string">&#x27;electron/dist/background.js&#x27;</span>,<br>                    <span class="hljs-variable constant_">IP</span><br>                ])<br><br>                <span class="hljs-comment">// 监听后台脚本文件的变化，重新启动 Electron 进程</span><br>                fs.<span class="hljs-title function_">watchFile</span>(<span class="hljs-string">&#x27;electron/background.ts&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>                    <span class="hljs-title class_">ElectronProcess</span>.<span class="hljs-title function_">kill</span>() <span class="hljs-comment">// 终止现有 Electron 进程</span><br>                    <span class="hljs-title function_">buildBackground</span>(<span class="hljs-string">&#x27;electron/background.ts&#x27;</span>, <span class="hljs-string">&#x27;electron/dist/background.js&#x27;</span>) <span class="hljs-comment">// 重新构建后台脚本</span><br>                    <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-var-requires</span><br>                    <span class="hljs-title class_">ElectronProcess</span> = <span class="hljs-title function_">spawn</span>(<span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;electron&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-built_in">unknown</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>, [<br>                        <span class="hljs-string">&#x27;electron/dist/background.js&#x27;</span>,<br>                        <span class="hljs-variable constant_">IP</span><br>                    ]) <span class="hljs-comment">// 启动新的 Electron 进程</span><br>                &#125;)<br><br>                <span class="hljs-comment">// 监听 Electron 进程的错误输出</span><br>                <span class="hljs-title class_">ElectronProcess</span>.<span class="hljs-property">stderr</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`electron process: <span class="hljs-subst">$&#123;data.toString()&#125;</span>`</span>)<br>                &#125;)<br>            &#125;)<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="vite-config-ts"><a href="#vite-config-ts" class="headerlink" title="vite.config.ts"></a>vite.config.ts</h2></li></ul></li><li><p>引入我们编写的vite插件并注册</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; fileURLToPath, <span class="hljs-variable constant_">URL</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;node:url&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UnoCSS</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unocss/vite&#x27;</span><br><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">ElectronDevPlugin</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./electron/plugins/vite-electron-dev&#x27;</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">ElectronBuildPlugin</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./electron/plugins/vite-electron-build&#x27;</span><br><br><span class="hljs-comment">// https://vitejs.dev/config/</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>    <span class="hljs-attr">envPrefix</span>: <span class="hljs-string">&#x27;APPLET_&#x27;</span>,<br>    <span class="hljs-attr">plugins</span>: [<span class="hljs-title function_">vue</span>(), <span class="hljs-title class_">UnoCSS</span>(), <span class="hljs-title class_">ElectronDevPlugin</span>(), <span class="hljs-title class_">ElectronBuildPlugin</span>()],<br>    <span class="hljs-attr">base</span>: <span class="hljs-string">&#x27;./&#x27;</span>,<br>    <span class="hljs-attr">resolve</span>: &#123;<br>        <span class="hljs-attr">alias</span>: &#123;<br>            <span class="hljs-string">&#x27;@&#x27;</span>: <span class="hljs-title function_">fileURLToPath</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(<span class="hljs-string">&#x27;./src&#x27;</span>, <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">url</span>))<br>        &#125;<br>    &#125;,<br>    <span class="hljs-attr">server</span>: &#123;<br>        <span class="hljs-attr">proxy</span>: &#123;<br>            <span class="hljs-comment">// 跨域代理</span><br>            <span class="hljs-string">&#x27;/apis&#x27;</span>: &#123;<br>                <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;http://&#x27;</span> + env.<span class="hljs-property">VUE_APP_BASE_API</span>,<br>                <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">rewrite</span>: <span class="hljs-function">(<span class="hljs-params">path</span>) =&gt;</span> path.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^\/apis/</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>            &#125;<br>            <span class="hljs-comment">// 代理 WebSocket 或 socket</span><br>            <span class="hljs-comment">// &#x27;/socket.io&#x27;: &#123;</span><br>            <span class="hljs-comment">//   target: &#x27;ws://localhost:3000&#x27;,</span><br>            <span class="hljs-comment">//   ws: true</span><br>            <span class="hljs-comment">//  &#125;</span><br>        &#125;<br>    &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><h2 id="preload注入后无法在web层获取相关变量"><a href="#preload注入后无法在web层获取相关变量" class="headerlink" title="preload注入后无法在web层获取相关变量"></a>preload注入后无法在web层获取相关变量</h2><ul><li><p>需要在scr下新建global.d.ts，并且在tsconfig.app.json里面引入</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> &#123; <span class="hljs-title class_">Method</span>, <span class="hljs-title class_">ResponseType</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br><br><span class="hljs-keyword">export</span> &#123;&#125;<br><span class="hljs-keyword">declare</span> <span class="hljs-variable language_">global</span> &#123;<br>    <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Window</span> &#123;<br>        <span class="hljs-comment">// 这里新增preload里面的注入变量，防止window.versions报错</span><br>        electronAPI?: <span class="hljs-built_in">any</span> <span class="hljs-comment">//全局变量名</span><br>        versions?: <span class="hljs-built_in">any</span> <span class="hljs-comment">//</span><br>    &#125;<br>    <span class="hljs-keyword">interface</span> <span class="hljs-title class_">AxiosConfig</span> &#123;<br>        params?: <span class="hljs-built_in">any</span><br>        data?: <span class="hljs-built_in">any</span><br>        url?: <span class="hljs-built_in">string</span><br>        method?: <span class="hljs-title class_">Method</span><br>        headersType?: <span class="hljs-built_in">string</span><br>        responseType?: <span class="hljs-title class_">ResponseType</span><br>    &#125;<br><br>    <span class="hljs-keyword">interface</span> <span class="hljs-title class_">IResponse</span>&lt;T = <span class="hljs-built_in">any</span>&gt; &#123;<br>        <span class="hljs-attr">code</span>: <span class="hljs-built_in">string</span><br>        <span class="hljs-attr">data</span>: T <span class="hljs-keyword">extends</span> <span class="hljs-built_in">any</span> ? T : T &amp; <span class="hljs-built_in">any</span><br>    &#125;<br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">AxiosHeaders</span> =<br>        | <span class="hljs-string">&#x27;application/json&#x27;</span><br>        | <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span><br>        | <span class="hljs-string">&#x27;multipart/form-data&#x27;</span><br>&#125;<br><span class="hljs-keyword">declare</span> <span class="hljs-keyword">const</span> <span class="hljs-attr">window</span>: <span class="hljs-built_in">any</span><br><br></code></pre></td></tr></table></figure><ul><li><p>tsconfig.app.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;extends&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;@vue/tsconfig/tsconfig.dom.json&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// &quot;include&quot;: [&quot;env.d.ts&quot;, &quot;src/**/*&quot;, &quot;src/**/*.vue&quot;],</span><br>  <span class="hljs-attr">&quot;include&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;src/**/*.ts&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;src/**/*.d.ts&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;src/**/*.tsx&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;src/**/*.vue&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;electron/**/*.ts&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;exclude&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;src/**/__tests__/*&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;compilerOptions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;composite&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;baseUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;./&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;paths&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@/*&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;./src/*&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;types&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;three&quot;</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="打包注意点"><a href="#打包注意点" class="headerlink" title="打包注意点"></a>打包注意点</h2><ul><li>需要在根目录新建 .npmrc文件把下面的三行复制进去，这样打包才不会报错</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">ELECTRON_MIRROR</span>=<span class="hljs-attr">https</span>:<span class="hljs-comment">//npmmirror.com/mirrors/electron/</span><br>registry=<span class="hljs-attr">https</span>:<span class="hljs-comment">//registry.npm.taobao.org/</span><br>electron_builder_binaries_mirror=<span class="hljs-attr">https</span>:<span class="hljs-comment">//npm.taobao.org/mirrors/electron-builder-binaries/</span><br></code></pre></td></tr></table></figure><blockquote><p>集成方案来自b站up主小满zs，与借鉴了electron-vite框架，在他们的基础上完善了这一版，通过vite生命周期实现打包完成vite后再打包electron，这样开发模式启动时就能带起electron</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>前端笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用picgo配合easyImage搭建富文本粘贴自动上传</title>
    <link href="/2023/11/16/2023-11-16-%E4%BD%BF%E7%94%A8picgo%E9%85%8D%E5%90%88easyImage%E6%90%AD%E5%BB%BA%E5%AF%8C%E6%96%87%E6%9C%AC%E7%B2%98%E8%B4%B4%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/"/>
    <url>/2023/11/16/2023-11-16-%E4%BD%BF%E7%94%A8picgo%E9%85%8D%E5%90%88easyImage%E6%90%AD%E5%BB%BA%E5%AF%8C%E6%96%87%E6%9C%AC%E7%B2%98%E8%B4%B4%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="使用picgo配合easyImage搭建富文本粘贴自动上传"><a href="#使用picgo配合easyImage搭建富文本粘贴自动上传" class="headerlink" title="使用picgo配合easyImage搭建富文本粘贴自动上传"></a>使用picgo配合easyImage搭建富文本粘贴自动上传</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-keyword">body</span>：&#123;<span class="hljs-string">&quot;token&quot;</span>:<span class="hljs-string">&quot;你的简单图床apitoken&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://tuchuang.junsen.online//i/2023/11/16/iw82mw-1.png" alt="image-20231116114250759"></p><p>然后去typora 设置图片上传配置选择picgoapp</p><p><img src="https://tuchuang.junsen.online//i/2023/11/16/j03nxl-1.png" alt="image-20231116114902405"></p>]]></content>
    
    
    <categories>
      
      <category>自动化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git配置</title>
    <link href="/2023/11/15/git%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/11/15/git%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="新环境配置git多配置"><a href="#新环境配置git多配置" class="headerlink" title="新环境配置git多配置"></a>新环境配置git多配置</h1><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ssh-keygen -t rsa -C <span class="hljs-string">&#x27;xxx@qq.com&#x27;</span> -f ~<span class="hljs-regexp">/.ssh/gi</span>tee_id_rsa<br>ssh-keygen -t rsa -C <span class="hljs-string">&#x27;xxx@qq.com&#x27;</span> -f ~<span class="hljs-regexp">/.ssh/gi</span>thub_id_rsa<br>ssh-keygen -t rsa -C <span class="hljs-string">&#x27;xxx@qq.com&#x27;</span> -f ~<span class="hljs-regexp">/.ssh/gi</span>tlab_id_rsa<br></code></pre></td></tr></table></figure><h2 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># gitee</span><br>Host gitee.com<br>HostName gitee.com<br>PreferredAuthentications publickey<br>IdentityFile ~<span class="hljs-regexp">/.ssh/gi</span>tee_id_rsa<br><span class="hljs-comment"># github</span><br>Host github.com<br>HostName github.com<br>PreferredAuthentications publickey<br>IdentityFile ~<span class="hljs-regexp">/.ssh/gi</span>thub_id_rsa<br><span class="hljs-comment"># 璟胜gitlab</span><br>Host gitlab.xxx.com<br>HostName gitlab.xxx.com<br>PreferredAuthentications publickey<br>IdentityFile ~<span class="hljs-regexp">/.ssh/gi</span>thlab_id_rsa<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>环境配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宝塔使用webhook同步github代码</title>
    <link href="/2023/11/14/%E5%AE%9D%E5%A1%94%E4%BD%BF%E7%94%A8webhook%E5%90%8C%E6%AD%A5github%E4%BB%A3%E7%A0%81/"/>
    <url>/2023/11/14/%E5%AE%9D%E5%A1%94%E4%BD%BF%E7%94%A8webhook%E5%90%8C%E6%AD%A5github%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>宝塔使用webhook同步github代码</p><h3 id="服务器设置git"><a href="#服务器设置git" class="headerlink" title="服务器设置git"></a>服务器设置git</h3><ul><li><p>先去 服务器上设置github用户名、邮箱、密码</p></li><li><p>然后获取rsa密钥用于代码拉取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;xxx&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;xxx@qq.com&quot;</span><br>git config --global user.password <span class="hljs-string">&quot;xxx&quot;</span><br><br><span class="hljs-comment">#生成公钥</span><br>ssh-keygen -t rsa<br><span class="hljs-comment">#获取公钥</span><br><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure></li></ul><h2 id="宝塔软件商店搜索-webhook"><a href="#宝塔软件商店搜索-webhook" class="headerlink" title="宝塔软件商店搜索 webhook"></a>宝塔软件商店搜索 webhook</h2><p><img src="https://tuchuang.junsen.online//i/2023/11/14/stzy0l-1.png" alt="image-20231114174342741"></p><ul><li>点击设置添加hook，名称随便填，脚本复制以下的改下仓库地址和部署目录</li><li><strong>注意点：</strong> 仓库的代码需要是编译后的代码。可以利用git action自动编译</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-comment">#输出当前时间</span><br><span class="hljs-built_in">date</span> --<span class="hljs-built_in">date</span>=<span class="hljs-string">&#x27;0 days ago&#x27;</span> <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Start&quot;</span><br><span class="hljs-comment">#git项目路径</span><br>gitPath=<span class="hljs-string">&quot;/www/wwwroot/部署文件夹&quot;</span><br><span class="hljs-comment">#git 网址</span><br>gitHttp=<span class="hljs-string">&quot;仓库地址&quot;</span><br> <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Web站点路径：<span class="hljs-variable">$gitPath</span>&quot;</span><br> <br><span class="hljs-comment">#判断项目路径是否存在</span><br><span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$gitPath</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">cd</span> <span class="hljs-variable">$gitPath</span><br>        <span class="hljs-comment">#判断是否存在git目录</span><br>        <span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;.git&quot;</span> ]; <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;在该目录下克隆 git&quot;</span><br>                <span class="hljs-built_in">cd</span> ..<br>                git <span class="hljs-built_in">clone</span> <span class="hljs-variable">$gitHttp</span> <br>                <span class="hljs-comment"># mv gittemp/.git .</span><br>                <span class="hljs-comment"># rm -rf gittemp </span><br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>        <span class="hljs-keyword">else</span>  <br>              <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;在该目录下拉取 git&quot;</span><br>              git pull 2&gt;&amp;1<br>              <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;该项目路径不存在&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>        <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><ul><li><p>获取添加后的 hook地址去github仓库里的设置点击webhook添加宝塔生成的hook地址，填完后点击add webhook即可，第一次需要点击下宝塔webhook的测试按钮</p><p><img src="https://tuchuang.junsen.online//i/2023/11/14/t01js2-1.png" alt="image-20231114175358845"></p></li></ul><p><img src="https://tuchuang.junsen.online//i/2023/11/14/t0yp1j-1.png" alt="image-20231114175513385"></p><p><img src="https://tuchuang.junsen.online//i/2023/11/14/t111g1-1.png" alt="image-20231114175524611"></p>]]></content>
    
    
    <categories>
      
      <category>自动化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>久违的博客记录</title>
    <link href="/2023/11/03/%E4%B9%85%E8%BF%9D%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/11/03/%E4%B9%85%E8%BF%9D%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>记录下：2023-11-03重新写博客</p><p><img src="https://tuchuang.junsen.online//i/2023/11/14/retmd0-1.jpg" alt="5848e4a37f5e4fb39f4c4384a9c27523"></p><p><img src="https://tuchuang.junsen.online//i/2023/11/14/sjxupp-1.jpg" alt="5c23d52f880511ebb6edd017c2d2eca2"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/03/hello-world/"/>
    <url>/2023/11/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2023年前端开发年度总结</title>
    <link href="/2023/02/06/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <url>/2023/02/06/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>回顾这一年，我从大二兼职开发者到大三“全职开发”，见证了公司从成立初期到如今的发展。在2021年末，通过院长引荐，我参与了五邑大学某项目，与团队共同启动了长达一年的开发时限。公司于2022年后成立，我以兼职身份开始参与项目开发，在校期间，除了项目开发，我还投入双专业学习和各类竞赛，虽然部分技术提升有限，但微乎其微。</p><h2 id="2-技术成长"><a href="#2-技术成长" class="headerlink" title="2. 技术成长"></a>2. 技术成长</h2><h3 id="2-1-学习经历"><a href="#2-1-学习经历" class="headerlink" title="2.1 学习经历"></a>2.1 学习经历</h3><p>在2023年，我有幸参与了多个业务项目和百万用户的公益项目——诚信点评小程序。这一年，我不仅扩展了横向技能树，还转变为多领域开发者，涉及cocos游戏开发、自动化脚本开发、web3d开发等。在项目实际需求中，我深入学习了webgl、websocket、typescript、vue3、项目基建、git规范、cocos3d、UiAutomation、AiBote、vite、glsl、electorn、nestjs等技术，为公司业务的多样性提供了更广泛的支持。</p><h2 id="3-团队角色"><a href="#3-团队角色" class="headerlink" title="3. 团队角色"></a>3. 团队角色</h2><p>我在公司内部担任部分前端项目负责人，并担任新人培养导师。在工作期间，我主导了四个项目的基建与核心功能开发，取得了显著的团队成绩。</p><h2 id="4-发展计划"><a href="#4-发展计划" class="headerlink" title="4. 发展计划"></a>4. 发展计划</h2><p>展望未来，我期望在接下来的一年中能够主导更多基础建设项目，学习头部互联网企业所需的前沿技术，涉及更多底层原理，实现技术的深度和广度的双重提升。</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>2023年不仅是对这一年的总结，更是对过去三年的总结与吐槽。公司提供了平台，但同时也限制了个人的提升。在项目中涉猎各个方向，虽然见识了更多领域，但也面临难以专精某一项的挑战。未来，我将继续努力，寻找平衡点，实现专业技能的全面提升。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
